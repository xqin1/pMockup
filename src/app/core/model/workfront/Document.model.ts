import {Category} from '@app/core/model/workfront/Category.model';
import {User} from '@app/core/model/workfront/User.model';
import { DocumentVersion} from '@app/core/model/workfront/DocumentVersion.model';
import {DocumentApproval} from '@app/core/model/workfront/DocumentApproval.model';

export class Document {
  id: string;
  objCode: string;
  parameterValues: object;
  accessorIDs: string[];
  categoryID: string;
  checkedOutByID: string;
  currentVersionID: string;
  customerID: string;
  description: string;
  docObjCode: string;
  documentProviderID: string;
  documentRequestID: string;
  downloadURL: string;
  extRefID: string;
  externalIntegrationType: string;
  folderIDs: string[];
  handle: string;
  hasNotes: boolean;
  isDir: boolean;
  isPrivate: boolean;
  isPublic: boolean;
  iterationID: boolean;
  lastModDate: boolean;
  lastNoteID: boolean;
  lastSyncDate: Date;
  lastUpdateDate: Date;
  lastUpdatedByID: string;
  masterTaskID: string;
  name: string;
  objID: string;
  opTaskID: string;
  ownerID: string;
  portfolioID: string;
  previewURL: string;
  programID: string;
  projectID: string;
  publicToken: string;
  referenceObjCode: string;
  referenceObjID: string;
  referenceObjectName: string;
  releaseVersionID: string;
  securityAncestorsDisabled: boolean;
  securityRootID: string;
  securityRootObjCode: string;
  taskID: string;
  templateID: string;
  templateTaskID: string;
  topDocObjCode: string;
  topObjID: string;
  userID: string;
  category: Category;
  checkedOutBy: User;
  currentVersion: DocumentVersion;
  customer: object;
  documentRequest: object;
  iteration: object;
  lastNote: object;
  lastUpdatedBy: User;
  masterTask: object;
  opTask: object;
  owner: User;
  portfolio: object;
  program: object;
  project: object;
  releaseVersion: DocumentVersion;
  task: object;
  template: object;
  templateTask: object;
  user: User;
  accessRules: object[];
  approvals: DocumentApproval[];
  awaitingApprovals: object[];
  folders: object[];
  groups: object[];
  securityAncestors: object[];
  shares: object[];
  subscribers: User[];
  versions: DocumentVersion[];
}
